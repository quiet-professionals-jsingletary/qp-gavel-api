# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '805dd036-f470-49f4-8d1a-3de148c30f54'

  # Web app name
  webAppName: 'gavel-dev-server'

  # Environment name
  environmentName: 'gavel-dev-server'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Stage 1
  displayName: Create build
  jobs:
  - job: Build
    displayName: Building
    pool:
      vmImage: $(vmImageName)

    steps:
      # - task: NodeTool@0
      #   inputs:
      #     versionSpec: '14.17.1'
      #   displayName: 'Install Node.js'

      # - script: |
      #     npm install
      #     npm run build --if-present
      #     npm run test --if-present
      #   displayName: 'npm install, build and test'
      
    - task: ArchiveFiles@2
      displayName: 'Create new artifact'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Stage 2
  displayName: Deploy build
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploying
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: '.'
              verbose: true
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: gavel-dev-server'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|14.17.1'
              StartupCommand: 'npm run start:pm2'
              # StartupCommand: 'pm2 start "npm start" -i max --name qp-gavel-api --watch'
